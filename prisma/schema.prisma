generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model budget {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String    @db.VarChar(100)
  description  String?   @db.VarChar
  total_amount Int?
  start_date   DateTime? @db.Timestamp(6)
  end_date     DateTime? @db.Timestamp(6)
  company_id   String    @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  company      company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description         String?               @db.VarChar
  established_at      DateTime?             @db.Timestamp(6)
  address             String?               @db.VarChar(100)
  contact_number      String?               @db.VarChar(15)
  name                String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  user_id             String                @db.Uuid
  tenant_id           String                @db.VarChar(255)
  budget              budget[]
  user                user                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  financial_goal      financial_goal[]
  financial_policy    financial_policy[]
  financial_procedure financial_procedure[]
  financial_program   financial_program[]
}

model financial_goal {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title         String    @db.VarChar(100)
  description   String?   @db.VarChar
  target_amount Int?
  due_date      DateTime? @db.Timestamp(6)
  company_id    String    @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  company       company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model financial_policy {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String    @db.VarChar(100)
  description         String?   @db.VarChar
  implementation_date DateTime? @db.Timestamp(6)
  company_id          String    @db.Uuid
  created_at          DateTime  @default(now()) @db.Timestamp(6)
  updated_at          DateTime  @default(now()) @db.Timestamp(6)
  company             company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model financial_procedure {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String    @db.VarChar(100)
  description         String?   @db.VarChar
  implementation_date DateTime? @db.Timestamp(6)
  company_id          String    @db.Uuid
  created_at          DateTime  @default(now()) @db.Timestamp(6)
  updated_at          DateTime  @default(now()) @db.Timestamp(6)
  company             company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model financial_program {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(100)
  description String?   @db.VarChar
  start_date  DateTime? @db.Timestamp(6)
  end_date    DateTime? @db.Timestamp(6)
  company_id  String    @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company[]
}
